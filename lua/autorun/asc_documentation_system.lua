-- Advanced Space Combat - Ultimate Documentation System v2.2.1
-- Next-generation in-game documentation with Stargate technology integration

print("[Advanced Space Combat] Ultimate Documentation System v2.2.1 - Loading...")

-- Initialize documentation namespace
ASC = ASC or {}
ASC.Documentation = ASC.Documentation or {}

-- Documentation configuration
ASC.Documentation.Config = {
    -- Documentation settings
    EnableInGameHelp = true,
    EnableTooltips = true,
    EnableContextHelp = true,
    EnableSearchHelp = true,
    
    -- Help categories
    Categories = {
        "Quick Start Guide",
        "Ship Building & Management",
        "Stargate Technology",
        "Combat & Weapons",
        "Flight & Navigation",
        "Transport & Docking",
        "AI & Automation",
        "Configuration & Commands",
        "Troubleshooting",
        "Advanced Features"
    }
}

-- Documentation database
ASC.Documentation.Database = {
    ["Quick Start Guide"] = {
        {
            title = "Ultimate Quick Start",
            content = [[
Welcome to Advanced Space Combat v2.2.1 - Ultimate Edition!

ðŸš€ INSTANT SETUP (30 seconds):
1. Open Q Menu â†’ Advanced Space Combat tab
2. Ship Building â†’ Ship Core Manager â†’ "Spawn Ship Core"
3. Add components within 2000 units (auto-links!)
4. Use E key on any entity for control interface
5. Ask ARIA-2: "!ai help" for instant assistance

âš¡ FIRST SHIP BUILD:
1. Ship Core (central hub) - REQUIRED
2. Weapons (Pulse Cannon recommended)
3. Hyperdrive Engine (for travel)
4. Flight Console (for movement)
5. Shield Generator (for protection)

ðŸŒŒ STARGATE TECHNOLOGY:
- Ancient (Tier 10): ZPMs, Drone Weapons, City Shields
- Asgard (Tier 8): Ion Cannons, Beaming Tech
- Goa'uld (Tier 5): Staff Cannons, Sarcophagus
- Wraith (Tier 6): Dart Weapons, Organic Tech
- Ori (Tier 9): Pulse Weapons, Supergates
- Tau'ri (Tier 3): F-302s, Railguns

ðŸ¤– AI ASSISTANT:
- "!ai ship core" - Ship building help
- "!ai ancient tech" - Stargate technology
- "!ai weapons" - Combat systems
- "!ai commands" - All available commands

Ready for epic space adventures! ðŸŒŸ
            ]],
            tags = {"quickstart", "beginner", "setup", "stargate"}
        },
        {
            title = "Entity Overview",
            content = [[
CORE ENTITIES:
â€¢ Ship Core - Central management hub
â€¢ Hyperdrive Engine - Space propulsion
â€¢ Flight Console - Movement control

WEAPONS (5 Types):
â€¢ Pulse Cannon - Fast-firing energy
â€¢ Beam Weapon - Continuous beam
â€¢ Torpedo Launcher - Guided projectiles
â€¢ Railgun - Kinetic penetration
â€¢ Plasma Cannon - Area effect

TRANSPORT:
â€¢ Docking Pad - Landing facilities
â€¢ Shuttle - Automated transport

DEFENSE:
â€¢ Shield Generator - Protection systems
            ]],
            tags = {"entities", "overview", "reference"}
        }
    ],
    
    ["Ship Building"] = {
        {
            title = "Ship Core System",
            content = [[
The Ship Core is the central hub of every ship.

FEATURES:
â€¢ Auto-detects ship structure
â€¢ Manages all ship systems
â€¢ Provides real-time status
â€¢ Handles resource distribution
â€¢ Coordinates system integration

SETUP:
1. Spawn Ship Core first
2. Place other components within 2000 units
3. Systems auto-link to ship core
4. Use E key to access interface
5. Configure ship name and settings

SHIP DETECTION:
â€¢ Automatically finds welded entities
â€¢ Calculates ship mass and size
â€¢ Monitors hull integrity
â€¢ Tracks system status
â€¢ Manages energy distribution

CONFIGURATION:
â€¢ Ship naming system
â€¢ Health monitoring
â€¢ Energy management
â€¢ System coordination
â€¢ Performance tracking
            ]],
            tags = {"ship core", "setup", "configuration"}
        },
        {
            title = "Auto-Linking System",
            content = [[
Advanced Space Combat features automatic system linking.

HOW IT WORKS:
â€¢ Components auto-link to nearby ship cores
â€¢ Link range: 2000 units
â€¢ No manual configuration required
â€¢ Real-time status updates
â€¢ Cross-system communication

SUPPORTED SYSTEMS:
â€¢ All weapon types
â€¢ Flight consoles
â€¢ Shield generators
â€¢ Ammunition systems
â€¢ Tactical AI

BENEFITS:
â€¢ Plug-and-play operation
â€¢ No complex setup
â€¢ Automatic coordination
â€¢ Real-time integration
â€¢ Professional operation
            ]],
            tags = {"auto-linking", "systems", "integration"}
        }
    ],
    
    ["Combat Systems"] = {
        {
            title = "Weapon Types Guide",
            content = [[
Advanced Space Combat features 5 weapon types:

PULSE CANNON:
â€¢ Fast-firing energy weapon
â€¢ High rate of fire
â€¢ Good for light targets
â€¢ Energy efficient

BEAM WEAPON:
â€¢ Continuous energy beam
â€¢ Sustained damage
â€¢ Excellent accuracy
â€¢ High energy consumption

TORPEDO LAUNCHER:
â€¢ Guided heavy projectiles
â€¢ Smart targeting
â€¢ High damage
â€¢ Limited ammunition

RAILGUN:
â€¢ Electromagnetic kinetic weapon
â€¢ Penetrating rounds
â€¢ Armor piercing
â€¢ High velocity

PLASMA CANNON:
â€¢ Area-effect energy weapon
â€¢ Splash damage
â€¢ Good vs groups
â€¢ Energy intensive

All weapons auto-link to ship cores and coordinate with tactical AI.
            ]],
            tags = {"weapons", "combat", "guide"}
        },
        {
            title = "Tactical AI System",
            content = [[
The Tactical AI provides intelligent combat assistance.

BEHAVIOR MODES:
â€¢ Aggressive - Maximum firepower
â€¢ Defensive - Protection focus
â€¢ Balanced - Adaptive strategy

FEATURES:
â€¢ Auto-targeting
â€¢ Weapon coordination
â€¢ Fleet communication
â€¢ Threat assessment
â€¢ Combat optimization

CONFIGURATION:
â€¢ AI behavior selection
â€¢ Target prioritization
â€¢ Engagement rules
â€¢ Fleet coordination
â€¢ Performance tuning

The AI integrates with all weapon systems and provides real-time combat assistance.
            ]],
            tags = {"tactical ai", "combat", "automation"}
        }
    ],
    
    ["Flight & Navigation"] = {
        {
            title = "Flight System Guide",
            content = [[
Advanced flight system with physics-based movement.

FEATURES:
â€¢ 6-DOF movement (6 degrees of freedom)
â€¢ Physics-based flight
â€¢ Collision avoidance
â€¢ Autopilot system
â€¢ Formation flying

FLIGHT CONSOLE:
â€¢ Interactive control interface
â€¢ Real-time HUD display
â€¢ Navigation controls
â€¢ Autopilot settings
â€¢ Formation management

AUTOPILOT:
â€¢ Waypoint navigation
â€¢ Collision avoidance
â€¢ Automatic approach
â€¢ Formation maintenance
â€¢ Emergency procedures

FORMATIONS:
â€¢ Line formation
â€¢ V-formation
â€¢ Diamond formation
â€¢ Box formation
â€¢ Custom spacing
            ]],
            tags = {"flight", "navigation", "autopilot"}
        }
    ],
    
    ["Transport Systems"] = {
        {
            title = "Docking System Guide",
            content = [[
Automated docking and landing system.

DOCKING PAD TYPES:
â€¢ Small Pad - Light ships (800 mass)
â€¢ Medium Pad - Standard ships (2500 mass)
â€¢ Large Pad - Heavy ships (6000 mass)
â€¢ Shuttle Pad - Shuttles only (500 mass)
â€¢ Cargo Pad - Cargo operations (3000 mass)

LANDING PHASES:
1. Approach - Ship guided to landing area
2. Descent - Controlled descent to pad
3. Touchdown - Precise positioning
4. Service - Refuel, repair, resupply

SERVICES:
â€¢ Refueling - 150 energy/sec
â€¢ Repair - 75 health/sec
â€¢ Resupply - 15 ammo/sec
â€¢ Passenger transfer - 2/sec
â€¢ Cargo transfer - 50 units/sec
            ]],
            tags = {"docking", "landing", "services"}
        },
        {
            title = "Shuttle System Guide",
            content = [[
Automated shuttle transport system.

SHUTTLE TYPES:
â€¢ Transport - 8 passengers, 200kg cargo
â€¢ Cargo - 2 passengers, 800kg cargo
â€¢ Emergency - 12 passengers, 100kg cargo
â€¢ Scout - 2 passengers, 50kg cargo

MISSION TYPES:
â€¢ Passenger transport
â€¢ Cargo delivery
â€¢ Emergency evacuation
â€¢ Supply runs
â€¢ Patrol missions

AUTOMATION:
â€¢ Auto-assignment
â€¢ Route planning
â€¢ Mission execution
â€¢ Progress tracking
â€¢ Emergency response
            ]],
            tags = {"shuttles", "transport", "automation"}
        }
    ],

    ["Stargate Technology"] = {
        {
            title = "Technology Cultures Guide",
            content = [[
Advanced Space Combat features authentic Stargate-inspired technologies.

TECHNOLOGY TIERS (1-10):
â€¢ Tau'ri (Earth) - Tier 3
â€¢ Goa'uld - Tier 5
â€¢ Wraith - Tier 6
â€¢ Asgard - Tier 8
â€¢ Ori - Tier 9
â€¢ Ancient - Tier 10

ANCIENT TECHNOLOGY:
â€¢ Drone Weapons - Self-guided energy projectiles
â€¢ City Shields - Planetary-scale barriers
â€¢ ZPM Power - Unlimited energy sources
â€¢ Instant Hyperdrives - Intergalactic travel

ASGARD TECHNOLOGY:
â€¢ Ion Cannons - High-energy particle beams
â€¢ Advanced Shields - Multi-layer protection
â€¢ Beaming Tech - Matter transportation
â€¢ Efficient Hyperdrives - Long-range travel

GOA'ULD TECHNOLOGY:
â€¢ Staff Cannons - Plasma-based weapons
â€¢ Pyramid Shields - Naquadah-enhanced barriers
â€¢ Ribbon Devices - Neural disruption weapons
â€¢ Reliable Hyperdrives - Galactic range

COMMANDS:
â€¢ asc_stargate_spawn <culture> <type>
â€¢ asc_stargate_upgrade <culture>
â€¢ asc_stargate_info
            ]],
            tags = {"stargate", "technology", "cultures", "ancient", "asgard", "goa'uld"}
        },
        {
            title = "Technology Compatibility",
            content = [[
Technology compatibility system for mixed-tech ships.

COMPATIBILITY RULES:
â€¢ Higher tier tech can interface with lower tier
â€¢ Same tier technology is fully compatible
â€¢ Lower tier cannot fully utilize higher tier
â€¢ Compatibility affects efficiency and performance

TECHNOLOGY INTEGRATION:
â€¢ Ship cores detect technology levels
â€¢ Auto-balancing for mixed systems
â€¢ Performance scaling based on compatibility
â€¢ Upgrade paths available

UPGRADE SYSTEM:
â€¢ Upgrade entities to higher technology tiers
â€¢ Enhanced capabilities and performance
â€¢ Visual and functional improvements
â€¢ Maintains backward compatibility

BEST PRACTICES:
â€¢ Use same-tier technology for optimal performance
â€¢ Upgrade systematically from core outward
â€¢ Consider energy requirements for higher tiers
â€¢ Plan ship designs around technology culture
            ]],
            tags = {"compatibility", "upgrades", "integration", "performance"}
        }
    ]
}

-- Help system functions
function ASC.Documentation.ShowHelp(category, topic)
    if not ASC.Documentation.Config.EnableInGameHelp then return end
    
    local categoryData = ASC.Documentation.Database[category]
    if not categoryData then
        ASC.Documentation.ShowHelpIndex()
        return
    end
    
    if topic then
        -- Show specific topic
        for _, item in ipairs(categoryData) do
            if item.title == topic then
                ASC.Documentation.ShowHelpTopic(item)
                return
            end
        end
    end
    
    -- Show category index
    ASC.Documentation.ShowCategoryIndex(category, categoryData)
end

function ASC.Documentation.ShowHelpIndex()
    local frame = vgui.Create("DFrame")
    frame:SetSize(800, 600)
    frame:SetTitle("Advanced Space Combat - Help System")
    frame:Center()
    frame:MakePopup()
    
    -- Create category list
    local categoryList = vgui.Create("DListView", frame)
    categoryList:SetPos(10, 30)
    categoryList:SetSize(200, 560)
    categoryList:AddColumn("Help Categories")
    
    for _, category in ipairs(ASC.Documentation.Config.Categories) do
        local line = categoryList:AddLine(category)
        line.OnSelect = function()
            ASC.Documentation.ShowHelp(category)
            frame:Close()
        end
    end
    
    -- Create welcome panel
    local welcomePanel = vgui.Create("DPanel", frame)
    welcomePanel:SetPos(220, 30)
    welcomePanel:SetSize(570, 560)
    
    welcomePanel.Paint = function(pnl, w, h)
        surface.SetDrawColor(240, 240, 240)
        surface.DrawRect(0, 0, w, h)
        
        surface.SetDrawColor(200, 200, 200)
        surface.DrawOutlinedRect(0, 0, w, h)
    end
    
    local welcomeLabel = vgui.Create("DLabel", welcomePanel)
    welcomeLabel:SetPos(20, 20)
    welcomeLabel:SetSize(530, 520)
    welcomeLabel:SetText([[
Welcome to Advanced Space Combat v2.2.1 Help System!

Select a category from the left to browse help topics.

QUICK ACCESS:
â€¢ Type "!ai help" in chat for AI assistance
â€¢ Use "asc_help" console command
â€¢ Press F1 for context-sensitive help

CATEGORIES:
â€¢ Getting Started - New player guide
â€¢ Ship Building - Ship construction
â€¢ Combat Systems - Weapons and tactics
â€¢ Flight & Navigation - Movement systems
â€¢ Transport Systems - Docking and shuttles
â€¢ Configuration - Settings and options
â€¢ Troubleshooting - Common issues
â€¢ API Reference - Developer information

For immediate assistance, try the ARIA chat AI by typing "!ai" followed by your question in chat.
    ]])
    welcomeLabel:SetWrap(true)
    welcomeLabel:SetAutoStretchVertical(true)
end

function ASC.Documentation.ShowCategoryIndex(category, categoryData)
    local frame = vgui.Create("DFrame")
    frame:SetSize(800, 600)
    frame:SetTitle("Advanced Space Combat - " .. category)
    frame:Center()
    frame:MakePopup()
    
    -- Create topic list
    local topicList = vgui.Create("DListView", frame)
    topicList:SetPos(10, 30)
    topicList:SetSize(780, 560)
    topicList:AddColumn("Topic")
    topicList:AddColumn("Tags")
    
    for _, item in ipairs(categoryData) do
        local tags = table.concat(item.tags or {}, ", ")
        local line = topicList:AddLine(item.title, tags)
        line.OnSelect = function()
            ASC.Documentation.ShowHelpTopic(item)
        end
    end
end

function ASC.Documentation.ShowHelpTopic(topic)
    local frame = vgui.Create("DFrame")
    frame:SetSize(800, 600)
    frame:SetTitle("Advanced Space Combat - " .. topic.title)
    frame:Center()
    frame:MakePopup()
    
    -- Create content panel
    local contentPanel = vgui.Create("DPanel", frame)
    contentPanel:SetPos(10, 30)
    contentPanel:SetSize(780, 560)
    
    contentPanel.Paint = function(pnl, w, h)
        surface.SetDrawColor(250, 250, 250)
        surface.DrawRect(0, 0, w, h)
        
        surface.SetDrawColor(200, 200, 200)
        surface.DrawOutlinedRect(0, 0, w, h)
    end
    
    -- Create scrollable text
    local textPanel = vgui.Create("DScrollPanel", contentPanel)
    textPanel:SetPos(10, 10)
    textPanel:SetSize(760, 540)
    
    local textLabel = vgui.Create("DLabel", textPanel)
    textLabel:SetPos(10, 10)
    textLabel:SetSize(740, 1000)
    textLabel:SetText(topic.content)
    textLabel:SetWrap(true)
    textLabel:SetAutoStretchVertical(true)
    textLabel:SetFont("DermaDefault")
end

-- Search function
function ASC.Documentation.SearchHelp(query)
    local results = {}
    
    for category, items in pairs(ASC.Documentation.Database) do
        for _, item in ipairs(items) do
            local searchText = (item.title .. " " .. item.content .. " " .. table.concat(item.tags or {}, " ")):lower()
            if string.find(searchText, query:lower()) then
                table.insert(results, {
                    category = category,
                    item = item,
                    relevance = ASC.Documentation.CalculateRelevance(searchText, query:lower())
                })
            end
        end
    end
    
    -- Sort by relevance
    table.sort(results, function(a, b) return a.relevance > b.relevance end)
    
    return results
end

function ASC.Documentation.CalculateRelevance(text, query)
    local relevance = 0
    local words = string.Split(query, " ")
    
    for _, word in ipairs(words) do
        local count = 0
        local start = 1
        while true do
            local pos = string.find(text, word, start)
            if not pos then break end
            count = count + 1
            start = pos + 1
        end
        relevance = relevance + count
    end
    
    return relevance
end

-- Console commands
concommand.Add("asc_help", function(ply, cmd, args)
    if not IsValid(ply) then return end
    
    local category = args[1]
    local topic = args[2]
    
    if category then
        ASC.Documentation.ShowHelp(category, topic)
    else
        ASC.Documentation.ShowHelpIndex()
    end
end)

concommand.Add("asc_help_search", function(ply, cmd, args)
    if not IsValid(ply) then return end
    
    local query = table.concat(args, " ")
    if query == "" then
        ply:ChatPrint("[Advanced Space Combat] Usage: asc_help_search <search terms>")
        return
    end
    
    local results = ASC.Documentation.SearchHelp(query)
    
    if #results == 0 then
        ply:ChatPrint("[Advanced Space Combat] No help topics found for: " .. query)
        return
    end
    
    ply:ChatPrint("[Advanced Space Combat] Help search results for: " .. query)
    for i, result in ipairs(results) do
        if i <= 5 then -- Show top 5 results
            ply:ChatPrint("â€¢ " .. result.item.title .. " (" .. result.category .. ")")
        end
    end
    
    if #results > 5 then
        ply:ChatPrint("... and " .. (#results - 5) .. " more results")
    end
end)

-- Context-sensitive help
hook.Add("PlayerUse", "ASC_ContextHelp", function(ply, ent)
    if not ASC.Documentation.Config.EnableContextHelp then return end
    if not IsValid(ent) then return end
    
    local class = ent:GetClass()
    local helpTopic = nil
    
    -- Map entity classes to help topics
    if class == "ship_core" then
        helpTopic = {category = "Ship Building", topic = "Ship Core System"}
    elseif string.find(class, "weapon") then
        helpTopic = {category = "Combat Systems", topic = "Weapon Types Guide"}
    elseif class == "asc_flight_console" then
        helpTopic = {category = "Flight & Navigation", topic = "Flight System Guide"}
    elseif class == "asc_docking_pad" then
        helpTopic = {category = "Transport Systems", topic = "Docking System Guide"}
    elseif class == "asc_shuttle" then
        helpTopic = {category = "Transport Systems", topic = "Shuttle System Guide"}
    end
    
    -- Show context help if F1 is held
    if input.IsKeyDown(KEY_F1) and helpTopic then
        ASC.Documentation.ShowHelp(helpTopic.category, helpTopic.topic)
        return false -- Prevent normal use
    end
end)

print("[Advanced Space Combat] Documentation System loaded successfully!")
